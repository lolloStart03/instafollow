# Questo codice apre la pagina di instagram, accetta i cookie necessari, effettua il login, apre la pagina del proprio profilo, 
# unfollowa i primi n profili, ed infine stampa i loro nomi utenti

from selenium.webdriver.firefox.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import NoSuchElementException, TimeoutException
from selenium import webdriver
import time
import random
import pickle

def salva_cookie(driver, cookie_file):
    cookies = driver.get_cookies()
    with open(cookie_file, 'wb') as file:
        pickle.dump(cookies, file)

def carica_cookie(driver, cookie_file):
    with open(cookie_file, 'rb') as file:
        cookies = pickle.load(file)
    for cookie in cookies:
        driver.add_cookie(cookie)

nomeUtente = "seaisblue55"
passwordAccesso = "Seeisblue"

k=0
cookie_file = f'C:\\Users\\Admin\\Desktop\\Python\\instagram cookies\\{nomeUtente}.pkl'

while True:
    # Set Firefox to run in headless mode
    options = Options()
    options.add_argument('-headless')

    # apriamo il browser Firefox
    driver = webdriver.Firefox(options=options) #se si vuole headless browser

    # apriamo la pagina di Instagram
    driver.get("https://www.instagram.com/")

    # Carica i cookie (se esistono)
    try:
        carica_cookie(driver, cookie_file)
        driver.refresh()
    except FileNotFoundError:
        pass

    time.sleep(7)  # Attendi che la pagina sia completamente caricata


    try:    
        # Attendi che l'elemento di input sia presente
        input_element = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.XPATH, f'//button[text()="Consenti tutti i cookie"]')))

        # aspettiamo che la barra dei cookie sia caricata
        accept_cookie_button_xpath = '//button[text()="Consenti tutti i cookie"]'
        try:
            accept_cookie_button = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, accept_cookie_button_xpath)))
            accept_cookie_button.click()
        except:
            pass

        time.sleep(1.5)

        # inseriamo il nome utente
        username_xpath = '//*[@id="loginForm"]/div/div[1]/div/label/input'
        username = driver.find_element(By.XPATH, username_xpath)
        username.send_keys(nomeUtente)

        # inseriamo la password
        password_xpath = '//*[@id="loginForm"]/div/div[2]/div/label/input'
        password = driver.find_element(By.XPATH, password_xpath)
        password.send_keys(passwordAccesso)

        time.sleep(0.5)

        # premiamo il pulsante "Login"
        login_button_xpath = '//*[@id="loginForm"]/div/div[3]/button'
        try:
            login_button = driver.find_element(By.XPATH, login_button_xpath)
            login_button.click()
        
        except NoSuchElementException:
            login_button2 = driver.find_element(By.XPATH, "/html/body/div[2]/div/div/div[1]/div/div/div/div[1]/section/main/article/div[2]/div[1]/div[2]/form/div/div[4]/button")
            login_button2.click()

        time.sleep(5)
        
        # Imposta a il salvataggio dei dati nel browser
        save_option_button_xpath = "/html/body/div[2]/div/div/div[2]/div/div/div/div[1]/div[1]/div[2]/section/main/div/div/div/section/div/button"
        save_option_button = WebDriverWait(driver, 15).until(EC.element_to_be_clickable((By.XPATH, save_option_button_xpath)))
        save_option_button.click()
        print("Login Effettuato")

        # Salva i cookie
        salva_cookie(driver, cookie_file)

    except (TimeoutException):
        # Se l'elemento non viene trovato, significa che il login è già stato effettuato
        pass

    time.sleep(10)
    #bottone_notifica = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.XPATH, f'/html/body/div[2]/div/div/div[3]/div/div/div[1]/div/div[2]/div/div/div/div/div[2]/div/div/div[3]/button[1]')))
    # fine login

    # Vai alla pagina del profilo personale
    driver.get(f"https://www.instagram.com/{nomeUtente}/following/")

    wait = WebDriverWait(driver, 10)
    # Attendi che l'elemento di input sia presente
    input_element = wait.until(EC.presence_of_element_located((By.XPATH, f'/html/body/div[2]/div/div/div[3]/div/div/div[1]/div/div[2]/div/div/div/div/div[2]/div/div/div[3]/div[1]/div/div[1]/div/div')))

    # Segui i primi n follower
    num_followers_to_follow = 7
    for i in range(num_followers_to_follow):
        follower_xpath = f'/html/body/div[2]/div/div/div[3]/div/div/div[1]/div/div[2]/div/div/div/div/div[2]/div/div/div[3]/div[1]/div/div[{i+1}]/div/div'
        follower = driver.find_element(By.XPATH, follower_xpath)
            
        follow_button = follower.find_element(By.TAG_NAME, "button")
        if follow_button.text in ["Segui già", "Following", "segui già", "following"]:
            follow_button.click()

            # Aspettiamo che il follower venga seguito
            time.sleep(random.uniform(0.5, 1.5))

            conferma_unfollow_xpath = "/html/body/div[2]/div/div/div[3]/div/div[2]/div[1]/div/div[2]/div/div/div/div/div/div/button[1]"
            conferma_unfollow = WebDriverWait(driver, 15).until(EC.element_to_be_clickable((By.XPATH, conferma_unfollow_xpath)))
            conferma_unfollow.click()

            time.sleep(random.uniform(0.5, 1.5))

            # Stampiamo l'username del follower appena seguito
            new_follower_username = follower.find_element(By.XPATH, ".//a").get_attribute("href").split("/")[-2]
            print(f"Unfollowed {new_follower_username}")
        else:
            print("?????")

    print(f"ciclo {k} completato")   
    driver.quit()
    k = k+1
    time.sleep(60*60)
    time.sleep(random.uniform(10, 400))    
